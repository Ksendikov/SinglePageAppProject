{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RetrievingTableData","DataLoading","OnLoadingData","Data","useState","loading","fields","tableData","setTableData","useEffect","axios","get","then","resp","allData","data","console","log","className","isLoading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"gSAwCeA,MAlCf,WACE,IAAMC,EAAcC,IAAcC,KAElC,EAAkCC,mBAAS,CAAC,CAC1CC,SAAS,EACTC,OAAQ,QAFV,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OAhBAC,qBAAU,WACRD,EAAa,CAACH,SAAQ,IAItBK,IAAMC,IAFS,oCAEGC,MAAK,SAACC,GACtB,IAAMC,EAAUD,EAAKE,KACrBP,EAAa,CACXH,SAAS,EACTC,OAAQQ,SAGX,CAACN,IAEJQ,QAAQC,IAAIV,GAGV,qBAAKW,UAAU,MAAf,SACE,cAACjB,EAAD,CAAakB,UAAWZ,EAAUF,QAASC,OAAQC,EAAUD,YCpBpDc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65e52aae.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Data from './components/Data';\nimport OnLoadingData from './components/LoadingData'\n\n\nfunction RetrievingTableData() {\n  const DataLoading = OnLoadingData(Data)\n\n  const [tableData, setTableData] = useState([{\n    loading: false,\n    fields: null,\n  }])\n\n  useEffect(() => {\n    setTableData({loading:true})\n\n    const apiUrl = 'http://127.0.0.1:8000/api/table/'\n\n    axios.get(apiUrl).then((resp) => {\n      const allData = resp.data\n      setTableData({\n        loading: false,\n        fields: allData\n      })\n    })\n  }, [setTableData])\n\n  console.log(tableData)\n  \n  return (\n    <div className=\"App\">\n      <DataLoading isLoading={tableData.loading} fields={tableData.fields}/>\n\n    \n    \n    </div>\n  );\n}\n\nexport default RetrievingTableData;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}