{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Table","useState","namefields","setNamefields","useEffect","axios","method","url","then","response","data","console","log","className","Object","keys","map","attr","toUpperCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA6IeA,MA3Cf,WAEE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACJC,MAAK,SAAAC,GACNN,EAAcM,EAASC,WAExB,IACHC,QAAQC,IAAIT,GACZQ,QAAQC,IAAIV,GAaV,cATI,CASJ,OAAKW,UAAU,MAAf,UAEI,wBAAOA,UAAU,sCAAjB,UACI,iFACA,6BACGC,OAAOC,KAAKb,EAAU,QAAY,IAAIc,KAAI,SAAAC,GAAI,OAAI,6BAC7CA,EAAKC,eADiDD,WAMpE,4CC3HSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9aa3907.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n// import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n\n// class Table extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       users: [],\n//       isLoading: false,\n//       isError: false\n//     }\n//   }\n\n\n\n// async componentDidMount() {\n//   this.setState({ isLoading: true })\n//   const response = await fetch('http://127.0.0.1:8000/api/table/')\n//   if (response.ok) {\n//     const tabledate = await response.json()\n//     // console.log(this.state.tabledate[\"result\"])\n//     this.setState({ tabledate, isLoading: false })\n//   } else {\n//     this.setState({ isError: true, isLoading: false })\n//   }\n//   console.log(Object.keys(this.state.tabledate[\"results\"][0]))\n//   console.log(this.state.tabledate[\"results\"].length)\n// }\n\n// renderTableHeader = () => {\n//   return Object.keys(this.state.tabledate[\"results\"][0]).map(attr => <th key={attr}>\n//     {attr.toUpperCase()}\n//   </th>)\n// }\n\n// renderTableRows = () => {\n//   return this.state.tabledate[\"results\"][0].map( field => {\n//     return (\n//       <tr key={field.id}>\n//         <td>{field.id}</td>\n//         <td>{field.date}</td>\n//       </tr>\n//     )\n//   }\n//   )\n\n// }\n\n\n// render(){\n//   const {tabledate, isLoading, isError} = this.state\n\n//   if(isLoading){\n//     return <div>Loading . . .</div>\n//   }\n\n//   if(isError){\n//     return <div>Error . . .</div>\n//   }\n//   return this.state.tabledate[\"results\"].length > 0\n//   ? (\n//     <table>\n//       <thead>\n//         <tr>\n//           {this.renderTableHeader()}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {this.renderTableRows()}\n//       </tbody>\n//     </table>\n\n//   ):(\n//     <div>No components </div>\n//   )\n//   }\n// }\n\n\n\n// export default Table\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Table() {\n\n  const [namefields, setNamefields] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: 'http://127.0.0.1:8000/api/table/'\n    }).then(response => {\n      setNamefields(response.data)\n    })\n  }, [])\n  console.log(setNamefields)\n  console.log(namefields)\n  \n  return (\n\n        //   <table className=\"table table-bordered border-primary\">\n        //      <caption>Таблица</caption>\n        //      <tr>\n        //        {Object.keys(namefields[\"results\"][0]).map(attr => <th key={attr}>\n        //             {attr.toUpperCase()}\n        //             </th>)}   \n        //      </tr>\n        //  </table>\n\n    <div className=\"App\">\n\n        <table className=\"table table-bordered border-primary\">\n            <caption>Таблица</caption>\n            <tr>\n              {Object.keys(namefields[\"results\"][0]).map(attr => <th key={attr}>\n                   {attr.toUpperCase()}\n                   </th>)}  \n            </tr>\n        </table>\n\n      <h1>Hellow</h1>\n\n    </div>\n  );\n}\n\nexport default Table;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}