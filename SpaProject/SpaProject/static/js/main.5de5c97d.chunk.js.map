{"version":3,"sources":["components/Data.js","components/LoadingData.js","App.js","reportWebVitals.js","index.js"],"names":["Data","props","results","length","map","field","id","date","name","quantity","distance","OnLoadingData","Component","isLoading","RetrievingTableData","DataLoading","useState","loading","fields","tableData","setTableData","useEffect","axios","get","then","resp","allData","data","console","log","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"wNAoCeA,MApCf,SAAcC,GAEV,IAAQC,EAAYD,EAAZC,QAER,OAAKA,GAA8B,IAAnBA,EAAQC,OAGpB,8BACI,kCACI,gCACI,+BACI,oCACA,sCACA,sCACA,0CACA,+CAGR,gCAEQD,EAAQE,KAAI,SAACC,GAAD,OACR,+BACI,6BAAKA,EAAMC,KACX,6BAAKD,EAAME,OACX,6BAAKF,EAAMG,OACX,6BAAKH,EAAMI,WACX,6BAAKJ,EAAMK,aALNL,EAAMC,cAjBM,0F,gBCQlCK,MAZf,SAAuBC,GACnB,OAAO,YAA+C,IAAxBC,EAAuB,EAAvBA,UAAcZ,EAAS,6BACjD,OAAKY,EAGD,8BACI,oMAJe,cAACD,EAAD,eAAeX,MCsC/Ba,MAlCf,WACE,IAAMC,EAAcJ,EAAcX,GAElC,EAAkCgB,mBAAS,CAAC,CAC1CC,SAAS,EACTC,OAAQ,QAFV,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OAhBAC,qBAAU,WACRD,EAAa,CAACH,SAAQ,IAItBK,IAAMC,IAFS,oCAEGC,MAAK,SAACC,GACtB,IAAMC,EAAUD,EAAKE,KACrBP,EAAa,CACXH,SAAS,EACTC,OAAQQ,SAGX,CAACN,IAEJQ,QAAQC,IAAIV,GAGV,qBAAKW,UAAU,MAAf,SACE,cAACf,EAAD,CAAaF,UAAWM,EAAUF,QAASC,OAAQC,EAAUD,YCpBpDa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5de5c97d.chunk.js","sourcesContent":["function Data(props) {\n\n    const { results } = props\n\n    if (!results || results.length === 0) return <p>Нет данных.</p>\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>date</th>\n                        <th>name</th>\n                        <th>quantity</th>\n                        <th>distance</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        results.map((field) =>\n                            <tr key={field.id}>\n                                <td>{field.id}</td>\n                                <td>{field.date}</td>\n                                <td>{field.name}</td>\n                                <td>{field.quantity}</td>\n                                <td>{field.distance}</td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n      </div>\n    )\n}\n\nexport default Data","function OnLoadingData(Component) {\n    return function LoadingData({ isLoading, ...props }) {\n        if (!isLoading) return <Component {...props} />\n\n        else return (\n            <div>\n                <h1>Подождите, данные загружаются!</h1>\n            </div>\n        )\n    }\n}\n\nexport default OnLoadingData","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Data from './components/Data';\nimport OnLoadingData from './components/LoadingData'\n\n\nfunction RetrievingTableData() {\n  const DataLoading = OnLoadingData(Data)\n\n  const [tableData, setTableData] = useState([{\n    loading: false,\n    fields: null,\n  }])\n\n  useEffect(() => {\n    setTableData({loading:true})\n\n    const apiUrl = 'http://127.0.0.1:8000/api/table/'\n\n    axios.get(apiUrl).then((resp) => {\n      const allData = resp.data\n      setTableData({\n        loading: false,\n        fields: allData\n      })\n    })\n  }, [setTableData])\n\n  console.log(tableData)\n  \n  return (\n    <div className=\"App\">\n      <DataLoading isLoading={tableData.loading} fields={tableData.fields}/>\n\n    \n    \n    </div>\n  );\n}\n\nexport default RetrievingTableData;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}