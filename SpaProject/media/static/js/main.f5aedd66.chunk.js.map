{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Table","props","renderTableHeader","Object","keys","state","tabledate","map","attr","toUpperCase","renderTableRows","field","id","date","users","isLoading","isError","a","this","setState","fetch","response","ok","json","console","log","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAkFeA,E,kDA1Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAsBVC,kBAAoB,WAClB,OAAOC,OAAOC,KAAK,EAAKC,MAAMC,UAAX,SAAiCC,KAAI,SAAAC,GAAI,OAAI,6BAC7DA,EAAKC,eADiED,OAxBtD,EA6BrBE,gBAAkB,WAChB,OAAO,EAAKL,MAAMC,UAAUC,KAAK,SAAAI,GAC/B,OACE,+BACE,6BAAKA,EAAMC,KACX,6BAAKD,EAAME,SAFJF,EAAMC,QA9BjB,EAAKP,MAAQ,CACXS,MAAO,GACPC,WAAW,EACXC,SAAS,GALM,E,4FAWrB,8BAAAC,EAAA,6DACEC,KAAKC,SAAS,CAAEJ,WAAW,IAD7B,SAEyBK,MAAM,oCAF/B,YAEQC,EAFR,QAGeC,GAHf,iCAI4BD,EAASE,OAJrC,OAIUjB,EAJV,OAKIkB,QAAQC,IAAInB,GACZY,KAAKC,SAAS,CAAEb,YAAWS,WAAW,IAN1C,wBAQIG,KAAKC,SAAS,CAAEH,SAAS,EAAMD,WAAW,IAR9C,iD,0EAgCA,WACE,MAAwCG,KAAKb,MAAtCC,EAAP,EAAOA,UAAWS,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,QAE7B,OAAGD,EACM,gDAGNC,EACM,8CAEFV,EAAUoB,OAAS,EAExB,kCACE,gCACE,6BACGR,KAAKhB,wBAGV,gCACGgB,KAAKR,uBAKV,qD,GApEgBiB,aCKLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5aedd66.chunk.js","sourcesContent":["// import React, {useState, useEffect} from 'react';\nimport React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n\nclass Table extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      isLoading: false,\n      isError: false\n    }\n  }\n\n\n\nasync componentDidMount() {\n  this.setState({ isLoading: true })\n  const response = await fetch('http://127.0.0.1:8000/api/table/')\n  if (response.ok) {\n    const tabledate = await response.json()\n    console.log(tabledate)\n    this.setState({ tabledate, isLoading: false })\n  } else {\n    this.setState({ isError: true, isLoading: false })\n  }\n}\n\nrenderTableHeader = () => {\n  return Object.keys(this.state.tabledate[\"results\"]).map(attr => <th key={attr}>\n    {attr.toUpperCase()}\n  </th>)\n}\n\nrenderTableRows = () => {\n  return this.state.tabledate.map( field => {\n    return (\n      <tr key={field.id}>\n        <td>{field.id}</td>\n        <td>{field.date}</td>\n      </tr>\n    )\n  }\n  )\n\n}\n\n\nrender(){\n  const {tabledate, isLoading, isError} = this.state\n\n  if(isLoading){\n    return <div>Loading . . .</div>\n  }\n\n  if(isError){\n    return <div>Error . . .</div>\n  }\n  return tabledate.length > 0\n  ? (\n    <table>\n      <thead>\n        <tr>\n          {this.renderTableHeader()}\n        </tr>\n      </thead>\n      <tbody>\n        {this.renderTableRows()}\n      </tbody>\n    </table>\n\n  ):(\n    <div>No components </div>\n  )\n  }\n}\n\n\n\nexport default Table\n\n\n\n// function Table() {\n\n//   const [namefields, setNamefields] = useState([])\n\n//   useEffect(() => {\n//     axios({\n//       method: \"GET\",\n//       url: 'http://127.0.0.1:8000/api/table/'\n//     }).then(response => {\n//       setNamefields(response.data)\n//     })\n//   }, [])\n//   console.log(namefields)\n//   console.log(setNamefields)\n//   return (\n\n//           <table className=\"table table-bordered border-primary\">\n//              <caption>Таблица</caption>\n//              <tr>\n//                {[namefields.results].map((c) =>(\n                \n//                  <th>{c}</th>\n//                ))}   \n//              </tr>\n//          </table>\n\n    // <div className=\"App\">\n\n    //     <table className=\"table table-bordered border-primary\">\n    //         <caption>Таблица</caption>\n    //         <tr>\n    //           {namefields.results.map((c) =>(\n                \n    //             <th>{c}</th>\n    //           ))}   \n    //         </tr>\n    //     </table>\n\n    //   <h1>Hellow</h1>\n\n//     // </div>\n//   );\n// }\n\n// export default Table;\n// ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}